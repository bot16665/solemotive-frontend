import React, { useState, useEffect } from "react";
import { useLocation, useNavigate } from "react-router-dom";
import Footer from "../components/footer";

const categories = ["Lifestyle", "Jordan", "Running", "Football", "Basketball"];
const genders = ["Men", "Women"];
const sizes = [7, 8, 9, 10];

function Men() {
  const location = useLocation();
  const navigate = useNavigate();
  const [selectedCategory, setSelectedCategory] = useState("");
  const [selectedGender, setSelectedGender] = useState("Men");
  const [searchQuery, setSearchQuery] = useState("");
  const [shoes, setShoes] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    const params = new URLSearchParams(location.search);
    const search = params.get("search");
    if (search) {
      setSearchQuery(search);
      setSelectedCategory("");
    } else {
      setSearchQuery("");
    }
  }, [location.search]);

  useEffect(() => {
    const fetchShoes = async () => {
      try {
        setLoading(true);
        const response = await fetch('http://localhost:5000/api/products');
        if (!response.ok) {
          throw new Error('Failed to fetch products');
        }
        const data = await response.json();
        setShoes(data);
        setError(null);
      } catch (err) {
        setError('Failed to load products. Please try again later.');
        console.error('Error fetching products:', err);
      } finally {
        setLoading(false);
      }
    };

    fetchShoes();
  }, []);

  const handleCategoryChange = (category) => {
    setSelectedCategory(category === selectedCategory ? "" : category);
    setSearchQuery("");
    navigate('/men');
  };

  const handleShoeClick = (shoe) => {
    navigate(`/shoesdetails/${shoe._id}`, { state: { shoe } });
  };

  return (
    <div>
      {/* ✅ Mobile Filters (Stacked Layout) */}
      <div className="md:hidden p-4 bg-white shadow-md">
        {/* Categories */}
        <div className="mb-4">
          <h2 className="font-bold text-lg mb-2">Categories</h2>
          <div className="flex flex-wrap gap-2">
            {categories.map((category) => (
              <button
                key={category}
                onClick={() => handleCategoryChange(category)}
                className={`px-4 py-2 rounded text-sm ${
                  selectedCategory === category ? "bg-blue-500 text-white font-bold" : "bg-gray-200 text-black"
                }`}
              >
                {category}
              </button>
            ))}
          </div>
        </div>

        {/* Gender */}
        <div className="mb-4">
          <h2 className="font-bold text-lg mb-2">Gender</h2>
          <div className="flex gap-2">
            {genders.map((gender) => (
              <button
                key={gender}
                onClick={() => setSelectedGender(gender)}
                className={`px-4 py-2 rounded text-sm ${
                  selectedGender === gender ? "bg-blue-500 text-white font-bold" : "bg-gray-200 text-black"
                }`}
              >
                {gender}
              </button>
            ))}
          </div>
        </div>

        {/* Sizes */}
        <div>
          <h2 className="font-bold text-lg mb-2">Sizes</h2>
          <div className="flex gap-2">
            {sizes.map((size) => (
              <button key={size} className="px-4 py-2 rounded text-sm bg-gray-200 text-black">
                UK {size}
              </button>
            ))}
          </div>
        </div>
      </div>

      {/* ✅ Desktop Sidebar (Unchanged) */}
      <div className="hidden md:flex md:w-1/4 p-4 border-r-2 border-gray-300">
        <h2 className="font-bold mb-4">Categories</h2>
        {categories.map((category) => (
          <button
            key={category}
            onClick={() => handleCategoryChange(category)}
            className={`block mb-2 px-4 py-2 rounded ${
              selectedCategory === category ? "text-blue-600 font-bold" : "text-black"
            }`}
          >
            {category}
          </button>
        ))}
      </div>

      {/* ✅ Shoe Grid */}
      <div className="w-full md:w-3/4 grid grid-cols-2 sm:grid-cols-2 md:grid-cols-3 gap-4 p-4">
        {loading ? (
          <div className="col-span-full text-center py-8">
            <div className="inline-block animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-blue-500"></div>
            <p className="mt-2">Loading products...</p>
          </div>
        ) : error ? (
          <div className="col-span-full text-center py-8 text-red-500">{error}</div>
        ) : shoes.length > 0 ? (
          shoes.map((shoe) => (
            <div
              key={shoe._id}
              className="p-4 cursor-pointer hover:shadow-lg transition duration-300"
              onClick={() => handleShoeClick(shoe)}
            >
              <img
                src={shoe.image}
                alt={shoe.name}
                className="w-full"
                style={{ width: "100%", height: "300px", objectFit: "cover" }}
              />
              <h3 className="font-bold">{shoe.name}</h3>
              <p>{shoe.category}</p>
              <p>₹{shoe.price}</p>
            </div>
          ))
        ) : (
          <p className="text-center col-span-full text-red-500">
            No shoes found for "{searchQuery || selectedCategory}"
          </p>
        )}
      </div>

      {/* ✅ Footer */}
      <Footer />
    </div>
  );
}

export default Men;
